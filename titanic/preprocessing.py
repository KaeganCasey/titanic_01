# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_preprocessing.ipynb (unless otherwise specified).

__all__ = ['get_cabin_info', 'create_features', 'impute_null_values', 'drop_vars', 'create_dumm', 'run',
           'save_interim_data']

# Cell
import pandas as pd
# pd.options.display.max_rows = 120
# pd.options.display.max_columns = 120
import numpy as np

# Cell
def get_cabin_info(string):
    sub_str_li = ['A', 'B', 'C', 'D', 'E', 'F', 'T', 'G']
    for i in sub_str_li:
        if i in str(string):
            return i
    return 'Unknown'


def create_features(dfs):
    for df in dfs:
        #df['Family_Size']=df['SibSp']+df['Parch']
        df['Deck'] = [get_cabin_info(string) for string in df['Cabin']]
    return dfs


def impute_null_values(dfs):
    for df in dfs:
        df['Age'] = df.groupby('Sex')['Age'].apply(lambda x: x.fillna(x.mean()))
        df['Embarked'].fillna(df['Embarked'].mode()[0], inplace=True)
    return dfs


def drop_vars(dfs, drop_features):
    for df in dfs:
        df.drop(drop_features, axis=1, inplace=True)
    return dfs


def create_dumm(dfs):
    dfs = [pd.get_dummies(df) for df in dfs]
    return dfs


def run(dfs, drop_features):
    '''
    df[0] = train, df[1] = test
    '''
    dfs = create_features(dfs)
    dfs = impute_null_values(dfs)
    dfs = drop_vars(dfs, drop_features)
    dfs = create_dumm(dfs)
    #print(dfs)
    return dfs

# Cell
def save_interim_data(df, filename, folder='../data/2_interim/'):
    path = folder + filename
    df.to_csv(path, index=False)
    return True